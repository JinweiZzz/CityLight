// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: wolong/routing/v2/routing_service.proto
#ifndef GRPC_wolong_2frouting_2fv2_2frouting_5fservice_2eproto__INCLUDED
#define GRPC_wolong_2frouting_2fv2_2frouting_5fservice_2eproto__INCLUDED

#include "wolong/routing/v2/routing_service.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace wolong {
namespace routing {
namespace v2 {

class RoutingService final {
 public:
  static constexpr char const* service_full_name() {
    return "wolong.routing.v2.RoutingService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Get route by type/start/end
    virtual ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::wolong::routing::v2::GetRouteResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>> PrepareAsyncGetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>>(PrepareAsyncGetRouteRaw(context, request, cq));
    }
    // 设置行车导航道路通行成本
    virtual ::grpc::Status SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::wolong::routing::v2::SetDrivingCostsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>> AsyncSetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>>(AsyncSetDrivingCostsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>> PrepareAsyncSetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>>(PrepareAsyncSetDrivingCostsRaw(context, request, cq));
    }
    // 获取行车导航道路通行成本
    virtual ::grpc::Status GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::wolong::routing::v2::GetDrivingCostsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>> AsyncGetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>>(AsyncGetDrivingCostsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>> PrepareAsyncGetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>>(PrepareAsyncGetDrivingCostsRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Get route by type/start/end
      virtual void GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 设置行车导航道路通行成本
      virtual void SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // 获取行车导航道路通行成本
      virtual void GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetRouteResponse>* PrepareAsyncGetRouteRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>* AsyncSetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::SetDrivingCostsResponse>* PrepareAsyncSetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>* AsyncGetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::wolong::routing::v2::GetDrivingCostsResponse>* PrepareAsyncGetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::wolong::routing::v2::GetRouteResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>> AsyncGetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>>(AsyncGetRouteRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>> PrepareAsyncGetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>>(PrepareAsyncGetRouteRaw(context, request, cq));
    }
    ::grpc::Status SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::wolong::routing::v2::SetDrivingCostsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>> AsyncSetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>>(AsyncSetDrivingCostsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>> PrepareAsyncSetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>>(PrepareAsyncSetDrivingCostsRaw(context, request, cq));
    }
    ::grpc::Status GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::wolong::routing::v2::GetDrivingCostsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>> AsyncGetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>>(AsyncGetDrivingCostsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>> PrepareAsyncGetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>>(PrepareAsyncGetDrivingCostsRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRoute(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response, std::function<void(::grpc::Status)>) override;
      void SetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetDrivingCosts(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>* AsyncGetRouteRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetRouteResponse>* PrepareAsyncGetRouteRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetRouteRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>* AsyncSetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::SetDrivingCostsResponse>* PrepareAsyncSetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>* AsyncGetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::wolong::routing::v2::GetDrivingCostsResponse>* PrepareAsyncGetDrivingCostsRaw(::grpc::ClientContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetRoute_;
    const ::grpc::internal::RpcMethod rpcmethod_SetDrivingCosts_;
    const ::grpc::internal::RpcMethod rpcmethod_GetDrivingCosts_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Get route by type/start/end
    virtual ::grpc::Status GetRoute(::grpc::ServerContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response);
    // 设置行车导航道路通行成本
    virtual ::grpc::Status SetDrivingCosts(::grpc::ServerContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response);
    // 获取行车导航道路通行成本
    virtual ::grpc::Status GetDrivingCosts(::grpc::ServerContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRoute() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoute(::grpc::ServerContext* context, ::wolong::routing::v2::GetRouteRequest* request, ::grpc::ServerAsyncResponseWriter< ::wolong::routing::v2::GetRouteResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDrivingCosts(::grpc::ServerContext* context, ::wolong::routing::v2::SetDrivingCostsRequest* request, ::grpc::ServerAsyncResponseWriter< ::wolong::routing::v2::SetDrivingCostsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDrivingCosts(::grpc::ServerContext* context, ::wolong::routing::v2::GetDrivingCostsRequest* request, ::grpc::ServerAsyncResponseWriter< ::wolong::routing::v2::GetDrivingCostsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetRoute<WithAsyncMethod_SetDrivingCosts<WithAsyncMethod_GetDrivingCosts<Service > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRoute() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::GetRouteRequest, ::wolong::routing::v2::GetRouteResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wolong::routing::v2::GetRouteRequest* request, ::wolong::routing::v2::GetRouteResponse* response) { return this->GetRoute(context, request, response); }));}
    void SetMessageAllocatorFor_GetRoute(
        ::grpc::MessageAllocator< ::wolong::routing::v2::GetRouteRequest, ::wolong::routing::v2::GetRouteResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::GetRouteRequest, ::wolong::routing::v2::GetRouteResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::SetDrivingCostsRequest, ::wolong::routing::v2::SetDrivingCostsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wolong::routing::v2::SetDrivingCostsRequest* request, ::wolong::routing::v2::SetDrivingCostsResponse* response) { return this->SetDrivingCosts(context, request, response); }));}
    void SetMessageAllocatorFor_SetDrivingCosts(
        ::grpc::MessageAllocator< ::wolong::routing::v2::SetDrivingCostsRequest, ::wolong::routing::v2::SetDrivingCostsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::SetDrivingCostsRequest, ::wolong::routing::v2::SetDrivingCostsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDrivingCosts(
      ::grpc::CallbackServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::GetDrivingCostsRequest, ::wolong::routing::v2::GetDrivingCostsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::wolong::routing::v2::GetDrivingCostsRequest* request, ::wolong::routing::v2::GetDrivingCostsResponse* response) { return this->GetDrivingCosts(context, request, response); }));}
    void SetMessageAllocatorFor_GetDrivingCosts(
        ::grpc::MessageAllocator< ::wolong::routing::v2::GetDrivingCostsRequest, ::wolong::routing::v2::GetDrivingCostsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::wolong::routing::v2::GetDrivingCostsRequest, ::wolong::routing::v2::GetDrivingCostsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDrivingCosts(
      ::grpc::CallbackServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetRoute<WithCallbackMethod_SetDrivingCosts<WithCallbackMethod_GetDrivingCosts<Service > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRoute() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRoute() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRoute(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetDrivingCosts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetDrivingCosts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRoute() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRoute(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRoute(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetDrivingCosts(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetDrivingCosts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetDrivingCosts(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetDrivingCosts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRoute : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRoute() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wolong::routing::v2::GetRouteRequest, ::wolong::routing::v2::GetRouteResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wolong::routing::v2::GetRouteRequest, ::wolong::routing::v2::GetRouteResponse>* streamer) {
                       return this->StreamedGetRoute(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRoute() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRoute(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetRouteRequest* /*request*/, ::wolong::routing::v2::GetRouteResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRoute(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wolong::routing::v2::GetRouteRequest,::wolong::routing::v2::GetRouteResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetDrivingCosts() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wolong::routing::v2::SetDrivingCostsRequest, ::wolong::routing::v2::SetDrivingCostsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wolong::routing::v2::SetDrivingCostsRequest, ::wolong::routing::v2::SetDrivingCostsResponse>* streamer) {
                       return this->StreamedSetDrivingCosts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::SetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::SetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetDrivingCosts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wolong::routing::v2::SetDrivingCostsRequest,::wolong::routing::v2::SetDrivingCostsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetDrivingCosts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetDrivingCosts() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::wolong::routing::v2::GetDrivingCostsRequest, ::wolong::routing::v2::GetDrivingCostsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::wolong::routing::v2::GetDrivingCostsRequest, ::wolong::routing::v2::GetDrivingCostsResponse>* streamer) {
                       return this->StreamedGetDrivingCosts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetDrivingCosts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetDrivingCosts(::grpc::ServerContext* /*context*/, const ::wolong::routing::v2::GetDrivingCostsRequest* /*request*/, ::wolong::routing::v2::GetDrivingCostsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetDrivingCosts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::wolong::routing::v2::GetDrivingCostsRequest,::wolong::routing::v2::GetDrivingCostsResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetRoute<WithStreamedUnaryMethod_SetDrivingCosts<WithStreamedUnaryMethod_GetDrivingCosts<Service > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetRoute<WithStreamedUnaryMethod_SetDrivingCosts<WithStreamedUnaryMethod_GetDrivingCosts<Service > > > StreamedService;
};

}  // namespace v2
}  // namespace routing
}  // namespace wolong


#endif  // GRPC_wolong_2frouting_2fv2_2frouting_5fservice_2eproto__INCLUDED
